____________________________________________________________________________________________________________________________________________________________________________________________________________
INTRODUCAO/ INICIO
____________________________________________________________________________________________________________________________________________________________________________________________________________

- As aplica√ß√µes React s√£o compostas por componentes. Um componente √© uma parte da IU (interface do usu√°rio) que possui sua pr√≥pria l√≥gica e apar√™ncia. Um componente pode ser t√£o pequeno quanto um bot√£o, 
ou t√£o grande quanto uma p√°gina inteira.

- Componentes do React s√£o fun√ß√µes JavaScript que retornam marca√ß√£o (markup):

---Exemplo/Modelo-------------------------------
function MyButton() {
  return (
    <button>Eu sou um bot√£o</button>
  );
}

------------------------------------------------

- Agora que voc√™ declarou MyButton, voc√™ pode aninh√°-lo em outro componente:

---Exemplo/Modelo-------------------------------
export default function MyApp() {
  return (
    <div>
      <h1>Bem-vindo ao meu aplicativo</h1>
      <MyButton />
    </div>
  );
}
------------------------------------------------

- Repare que <MyButton /> come√ßa com letra mai√∫scula. 
- √â dessa forma que voc√™ identifica um componente React. 
- Os nomes dos componentes React sempre devem COMECAR com letra MAI√öSCULA, enquanto as tags HTML devem ser em MIN√öSCULAS

REACT ---> Comeca c LETRA MAI√öSCULA
HTML ---> Comeca c LETRA MIN√öSCULAS


---Exemplo/Modelo-------------------------------
function MyButton() {
  return (
    <button>
      Eu sou um bot√£o
    </button>
  );
}

export default function MyApp() {
  return (
    <div>
      <h1>Bem-vindo ao meu aplicativo</h1>
      <MyButton />
    </div>
  );
}
------------------------------------------------

A palavra-chave export default especifica o componente principal no arquivo. 

üåêhttps://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Statements/export
üåêhttps://javascript.info/import-export 

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
üìù Escrevendo marca√ß√µes (markup) com JSX
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
- A sintaxe de marca√ß√£o que voc√™ viu acima √© chamada de JSX. Ela √© opcional, mas a maioria dos projetos React utiliza JSX pela sua conveni√™ncia.
- Todas as todas as ferramentas de desenvolvimento que recomendamos suportam JSX prontamente.

- JSX √© mais rigoroso do que HTML. 
  - Voc√™ precisa fechar as tags, como <br />
  - Seu componente n√£o pode retornar v√°rias tags JSX separadas.
  - Voc√™ precisa envolv√™-las em um elemento pai compartilhado, como um <div>...</div> ou um <>...</> vazio:


---Exemplo/Modelo-------------------------------
function AboutPage() {
  return (
    <>
      <h1>Sobre</h1>
      <p>Ol√°.<br />Como vai?</p>
    </>
  );
}
-------------------------------------------------

Se voc√™ tiver muito HTML para converter para JSX, voc√™ pode usar um conversor online.
üåê https://transform.tools/html-to-jsx 



---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
üé® Adicionando estilos
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

- No React, voc√™ define uma classe CSS usando className, que funciona da mesma forma que o atributo HTML class:

---Exemplo/Modelo-------------------------------

<img className="avatar" />

-------------------------------------------------

- Depois, voc√™ escreve o CSS para esse elemento em um arquivo CSS separado:

---Exemplo/Modelo-------------------------------

/* No seu arquivo CSS */
.avatar {
  border-radius: 50%;
}
-------------------------------------------------

- O React n√£o especifica como voc√™ adiciona arquivos CSS. 
- No caso mais simples, voc√™ adicionar√° uma tag <link> ao seu HTML.
- Se voc√™ estiver usando uma ferramenta de constru√ß√£o ou um framework, consulte sua documenta√ß√£o para aprender como adicionar um arquivo CSS ao seu projeto.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Exibindo dados 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
- JSX permite que voc√™ coloque marca√ß√£o dentro do JavaScript.
- As chaves permitem que voc√™ insira express√µes JavaScript.
- sso √© √∫til para incorporar vari√°veis do seu c√≥digo e exibi-las para o usu√°rio. 
**Por exemplo, isso ir√° exibir user.name:

---Exemplo/Modelo-------------------------------
return (
  <h1>
    {user.name}
  </h1>
);
-------------------------------------------------

- Voc√™ tamb√©m pode incorporar express√µes JavaScript a partir de atributos JSX, mas voc√™ deve usar chaves em vez de aspas. Por exemplo, className="avatar" passa a string "avatar" como a classe CSS, 
mas src={user.imageUrl} l√™ o valor da vari√°vel JavaScript user.imageUrl, e ent√£o passa esse valor como o atributo src:

---Exemplo/Modelo-------------------------------
return (
  <img
    className="avatar"
    src={user.imageUrl}
  />
);
-------------------------------------------------

Voc√™ tamb√©m pode colocar express√µes mais complexas dentro das chaves do JSX, por exemplo, concatena√ß√£o de strings

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Renderiza√ß√£o condicional 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
No React, n√£o existe uma sintaxe especial para escrever condi√ß√µes. Voc√™ usar√° as mesmas t√©cnicas que utiliza ao escrever c√≥digo JavaScript convencional. Por exemplo, voc√™ pode usar uma instru√ß√£o if 
para incluir JSX condicionalmente:

---Exemplo/Modelo-------------------------------
let content;
if (isLoggedIn) {
  content = <AdminPanel />;
} else {
  content = <LoginForm />;
}
return (
  <div>
    {content}
  </div>
);
-------------------------------------------------

- Se preferir um c√≥digo mais compacto, voc√™ pode utilizar o operador condicional ?. Ao contr√°rio do if, ele funciona dentro do JSX:
- Quando voc√™ n√£o precisa do caso else, voc√™ pode usar uma sintaxe mais curta com o operador l√≥gico &&:
- Todas essas abordagens tamb√©m funcionam para especificar atributos condicionalmente. Se voc√™ n√£o estiver familiarizado com algumas dessas sintaxes JavaScript, pode come√ßar sempre 
  usando if...else.



---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Renderizando listas 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
- Voc√™ ir√° depender de recursos do JavaScript como o loop for e a fun√ß√£o map() de arrays






____________________________________________________________________________________________________________________________________________________________________________________________________________
COMPONENTES 
_________________________________________________________________________________________________________________________________________________________________________________________________________


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Seu Primeiro Componente
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
